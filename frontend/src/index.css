@tailwind base;
@tailwind components;
@tailwind utilities;

html,
body,
#root {
  height: 100%;
}

/* 1. Use a more-intuitive box-sizing model */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* 2. Remove default margin */
* {
  margin: 0;
}

/* 3. Enable keyword animations */
@media (prefers-reduced-motion: no-preference) {
  html {
    interpolate-size: allow-keywords;
  }
}

body {
  /* 4. Add accessible line-height */
  line-height: 1.5;
  /* 5. Improve text rendering */
  -webkit-font-smoothing: antialiased;
  background-color: #f8f4f0;
}

/* 6. Improve media defaults */
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}

/* 7. Inherit fonts for form controls */
input,
button,
textarea,
select {
  font: inherit;
}

/* 8. Avoid text overflows */
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}

/* 9. Improve line wrapping */
p {
  text-wrap: pretty;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  text-wrap: balance;
}

/*
  10. Create a root stacking context
*/
#root,
#__next {
  isolation: isolate;
}

@font-face {
  font-family: "Public Sans";
  font-style: normal;
  font-display: swap;
  src: url("./fonts/public-sans-selfhosted.woff2") format("woff2");
}

.text-preset-1 {
  font-family: "Public Sans", sans-serif;
  font-weight: 700; /* Bold */
  font-size: 2rem; /* 32px */
  line-height: 120%; /* 38.4px */
  letter-spacing: 0px;
}

.text-preset-2 {
  font-family: "Public Sans", sans-serif;
  font-weight: 700;
  font-size: 1.25rem; /* 20px */
  line-height: 120%; /* 24px */
  letter-spacing: 0px;
}

.text-preset-3 {
  font-family: "Public Sans", sans-serif;
  font-weight: 700;
  font-size: 1rem; /* 16px */
  line-height: 150%; /* 24px */
  letter-spacing: 0px;
}

.text-preset-4 {
  font-family: "Public Sans", sans-serif;
  font-weight: 400; /* Regular */
  font-size: 0.875rem; /* 14px */
  line-height: 150%; /* 21px */
  letter-spacing: 0px;
}

.text-preset-4-bold {
  font-family: "Public Sans", sans-serif;
  font-weight: 700;
  font-size: 0.875rem; /* 14px */
  line-height: 150%; /* 21px */
  letter-spacing: 0px;
}

.text-preset-5 {
  font-family: "Public Sans", sans-serif;
  font-weight: 400;
  font-size: 0.75rem; /* 12px */
  line-height: 150%; /* 18px */
  letter-spacing: 0px;
}

.text-preset-5-bold {
  font-family: "Public Sans", sans-serif;
  font-weight: 700;
  font-size: 0.75rem; /* 12px */
  line-height: 150%; /* 18px */
  letter-spacing: 0px;
}

svg {
  vertical-align: middle;
}

svg.auto-size {
  height: auto;
  width: auto;
  display: inline-block;
  max-height: 100%;
  max-width: 100%;
}

.fade-in {
  animation: fadeIn 500ms ease-in-out;
  animation-fill-mode: backwards;
}

@keyframes fadeIn {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

.slight-fade-in {
  animation: fadeIn 500ms ease-in-out;
  animation-fill-mode: backwards;
}

@keyframes slightFadeIn {
  0% {
    opacity: 0.5;
  }
  100% {
    opacity: 1;
  }
}

.rotate-back {
  animation: rotateBack 500ms ease-in-out;
  animation-fill-mode: backwards;
}

.rotate180 {
  animation: rotate180 500ms ease-in-out;
  animation-fill-mode: forwards;
}

@keyframes rotate180 {
  0% {
    transform: rotate(180deg);
  }

  100% {
    transform: rotate(0);
  }
}

@keyframes rotateBack {
  0% {
    transform: rotate(0);
  }

  100% {
    transform: rotate(180deg);
  }
}


/* From Uiverse.io by G4b413l */ 
.chaotic-orbit {
  --uib-size: 25px;
  --uib-speed: 1.5s;
  --uib-color: black;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  height: var(--uib-size);
  width: var(--uib-size);
  animation: rotate936 calc(var(--uib-speed) * 1.667) infinite linear;
 }
 
 .chaotic-orbit::before,
 .chaotic-orbit::after {
  content: '';
  position: absolute;
  height: 60%;
  width: 60%;
  border-radius: 50%;
  background-color: var(--uib-color);
  will-change: transform;
  flex-shrink: 0;
 }
 
 .chaotic-orbit::before {
  animation: orbit var(--uib-speed) linear infinite;
 }
 
 .chaotic-orbit::after {
  animation: orbit var(--uib-speed) linear calc(var(--uib-speed) / -2)
     infinite;
 }
 
 @keyframes rotate936 {
  0% {
   transform: rotate(0deg);
  }
 
  100% {
   transform: rotate(360deg);
  }
 }
 
 @keyframes orbit {
  0% {
   transform: translate(calc(var(--uib-size) * 0.5)) scale(0.73684);
   opacity: 0.65;
  }
 
  5% {
   transform: translate(calc(var(--uib-size) * 0.4)) scale(0.684208);
   opacity: 0.58;
  }
 
  10% {
   transform: translate(calc(var(--uib-size) * 0.3)) scale(0.631576);
   opacity: 0.51;
  }
 
  15% {
   transform: translate(calc(var(--uib-size) * 0.2)) scale(0.578944);
   opacity: 0.44;
  }
 
  20% {
   transform: translate(calc(var(--uib-size) * 0.1)) scale(0.526312);
   opacity: 0.37;
  }
 
  25% {
   transform: translate(0%) scale(0.47368);
   opacity: 0.3;
  }
 
  30% {
   transform: translate(calc(var(--uib-size) * -0.1)) scale(0.526312);
   opacity: 0.37;
  }
 
  35% {
   transform: translate(calc(var(--uib-size) * -0.2)) scale(0.578944);
   opacity: 0.44;
  }
 
  40% {
   transform: translate(calc(var(--uib-size) * -0.3)) scale(0.631576);
   opacity: 0.51;
  }
 
  45% {
   transform: translate(calc(var(--uib-size) * -0.4)) scale(0.684208);
   opacity: 0.58;
  }
 
  50% {
   transform: translate(calc(var(--uib-size) * -0.5)) scale(0.73684);
   opacity: 0.65;
  }
 
  55% {
   transform: translate(calc(var(--uib-size) * -0.4)) scale(0.789472);
   opacity: 0.72;
  }
 
  60% {
   transform: translate(calc(var(--uib-size) * -0.3)) scale(0.842104);
   opacity: 0.79;
  }
 
  65% {
   transform: translate(calc(var(--uib-size) * -0.2)) scale(0.894736);
   opacity: 0.86;
  }
 
  70% {
   transform: translate(calc(var(--uib-size) * -0.1)) scale(0.947368);
   opacity: 0.93;
  }
 
  75% {
   transform: translate(0%) scale(1);
   opacity: 1;
  }
 
  80% {
   transform: translate(calc(var(--uib-size) * 0.1)) scale(0.947368);
   opacity: 0.93;
  }
 
  85% {
   transform: translate(calc(var(--uib-size) * 0.2)) scale(0.894736);
   opacity: 0.86;
  }
 
  90% {
   transform: translate(calc(var(--uib-size) * 0.3)) scale(0.842104);
   opacity: 0.79;
  }
 
  95% {
   transform: translate(calc(var(--uib-size) * 0.4)) scale(0.789472);
   opacity: 0.72;
  }
 
  100% {
   transform: translate(calc(var(--uib-size) * 0.5)) scale(0.73684);
   opacity: 0.65;
  }
 }
 
 